<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAICAAAAEACACoCAAANgAAABAQAAABAAgAaAUAAN4IAAAwMAAAAQAIAKgOAABGDgAAKAAAACAA
        AABAAAAAAQAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZAAAAAwMDAIAAAAAhAC0AhQoKAIUL
        CwCGDQ0Ahw0NAIcPDwCIEREAiRMTAC8AYAAAAH4AjRoaAI0cHAAeBX0ACACQACUIeQCQISEAdRs4AAAA
        mQARBIsAlSoqAAwMngBxJU0AERGgABISoACZMjIAhy5CAEkkfAAdHaUAnz4+AJ8/PwCgQEAAIyOnAGIz
        dAChQkIAo0ZGAFJSUgAtLasApElJAC8vrABdOoYAQDSfAKZMTAAyMq0ANTWuAKhRUQBbW1sAqVJSAKtW
        VgCtW1sAQkK0AGVlZQBHR7YAdVORALBhYQBJSbYASUm3AE5LtACxY2MATEy4AFFRuQBSUroAtGlpALVq
        agC3b28Ad3d3AFlZvQBbW70AeXl5ALlzcwBjY8EAZGTBAGhowgBpacMAcXHGAHNzxwB4dcMAdXXIAMaM
        jAB7e8oAfn7LAMmSkgCbiLoAwZKcAIqK0QDOnJwA0aKiANOlpQCcnNcA1q2tAKKi2gDatbUAqqrdAKqq
        3gDbt7cAra3eAN69vQC1teEA5MnJAOfOzgDIyOgA6NDQAM7O6wDv3t4A3t7yAODg8wDz5uYA9+/vAO/v
        +QD39/wA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxcXFxcXFxcXFxcXFxcXFxcXFxcXFx
        cXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcTFxcXExcXFxcTFxcXFx
        MXFxcXExcXFxcTFxcXFxcXFxAHFxcQBxcXFxAHFxcXEAcXFxcQBxcXFxAHFxcXFxMQACAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAADFxcXFxcQBxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxAHFxcXFx
        cXFxcXFxcXFacXFxcXFxcXFxcXFxcXFxcXEAcXFxcXFxcXFxcXFxYwkXcXFxcXFxcXFxcXFxcXExAABx
        cXFxcXFxcXFxcXEyUSJccXFxcXFxcXFxcXFxcXFxAHFxcXFxcXFxcXFxcQ5xWDJxcXFxcXFjbnFxcXFx
        cXEAcXFxcXFxcXFxcXFmHHFxBXFxcXFxcQpqcXFxcXFxcQBxcXFxcXFxcXFxcVFIcXEcY3FKTGtUMHFx
        cXFxcXFxAHFxcXFxcXFxcXFxMlxxcUhISTVNHxlccXFxcXFxMQAAcXFxcXFxcXFxcXEIanFxYR0acXFV
        FmlxcXFxcXFxcQBxcXFxcXFxcXFxbglxcXFxDE9xcT04KHBxcXFxcXFxAHFxcXFxcXFxcXFjJXFxcXEV
        VnFuA25kcXFxcXFxcXEAcXFxcXFxcXFxcVFIcXFxUywmcT05cXFxcXFxcXFxcQBxcXFxcXFxcXFxMlxx
        cXEaaRNBB3FxcXFxcXFxcTEAAHFxcXFxcXFwW1cUanFxSz9xXiBocXFxcXFxcXFxcXEAcXFxcXFxbyo7
        PBAYNy4jb3FxcXFxcXFxcXFxcXFxcQBxcXFqcXFOPnFjJWxiX3FxcXFxcXFxcXFxcXFxcXFxAHFxIgsg
        bxtwcUhIcXFxcXFxcXFxcXFxcXFxcXFxcXEAcSFDcS0rRXFxJWNxcXFxcXFxcXFxcXFxcXFxcXExAA0k
        PXFxahFncXEJbnFxcXFxcXFxcXFxcXFxcXFxcXFxBBIVOlAvHlFxZg9xcXFxcXFxcXFxcXFxcXFxcXFx
        cW0DZW9dUmBmB3E9UXFxcXFxcXFHNjY2NjY2R3FxcXFxcQFxcXFxcXEzKQZqcXFxcXFxcTZxcXFxcXE2
        cXFxcTEAAHFxcXFxcXFCWXFxcXFxcXFxNjQycUYVQDZxcXFxcXEAcXFxcXFxcXFxcXFxcXFxcXE2cXFx
        cXFxNnFxcXFxcQBxcXFxcXFxcXFxcXFxcXFxcUQ2NjY2NjZEcXFxcXFxJ3FxcXFxcXFxcXFxcXFxcXFx
        cXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAEAAAACAA
        AAABAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwAAABQAAAA7AAAAXAAAAIIAAACZAAYG
        mwALC50ACwueABERoAAVFaAAGhqjABsbpAAhIaYAIiKnACoqqgBSUlIALy+sAFtbWwA4OK8AQkKzAElJ
        tgBOTrgAUFC5AFJSugBWVrsAVla8AFdXvABeXr8AZGTBAGhowwBpacMAc3PHAIGBzQCMjNEAkpLUAJyc
        1wCtrd4As7PgALe34wC9veUAysrqAM7O6wDQ0OwA19fvANjY7wDe3vIA39/yAObm9QD39/wA////AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMTMzMTMzMTMzMTMzMTMzMTAQAAAAAAAAAA
        AAAAABMzMwAzMzMzMzMxMzMzMzMzMzMAMzMzMzMrCCMzMzMzMzMTADMzMzMzHB0VMzMyMzMzMwAzMzMz
        Mw4rBjMzGiUzMzMAMzMzMzIGMxUoMwotMzMTADMsMzMpEjMfHigUMzMzMwAbCSczIyEzKRAYIjMzMzMC
        DSQZMxclMzMLDDMzMzMTBCAuDzMOLzMzMDEzMzMzMwUtMw4qCjMzMzMzMzMzMzIDMzMaFhczMzMzMzMz
        MzMTADMzLQcmMzMzMzMzMzMzMxEzMzMyMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAADAA
        AABgAAAAAQAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAwMDAB0AAAAAABkAgAAAAIYN
        DQCGDg4Ahw4OAIgREQAsAGUAKQBoAIsXFwCMGBgAjRoaAI4cHAASAocAkCEhAAAAmQAPCJQAlCgoABgM
        jwAfD4wAIhKMAJctLQAODp8ADw+fAJcvLwCYMDAAERGgACEWlACZMjIAPB6BAJw3NwAZGaMAnTk5AH80
        VQBGJ4QAgjVTACAgpgAhIaYAIiKnAKFCQgChQ0MAKCipAKJFRQCjRkYAUlJSAC0tqwAyMq0ANTWuAFtb
        WwA3N68AqVJSADk5sAA6OrAAPDyxAD09sQCtW1sAZWVlAK5dXQBGRrUAr19fAGFOogCxY2MAsmRkAHFW
        mwBPT7kAUVG5AFJSugC1aWkAf2GbALdvbwB3d3cAW1u9ALlxcQB5eXkAuXNzAF9fvwBhYcAAY2PBAL16
        egC/fn4AwICAAG9vxgBzc8cAwoaGAHp6ygDGjIwAxo2NAIODzgCMjNEAjY3RAM6cnACXks4AkZHTAJyc
        1wCfn9kA1q2tAKKi2gClpdsAqqrdALGx4ACysuAA3r29AOHBwQC6uuQAvb3lAOTIyADkyckA587OAM7O
        6wDr1tYA69fXAOzY2ADX1+8A797eAPDg4ADe3vIA4ODzAPPm5gDm5vUA9+/vAO/v+QD79/cA9/f8AP//
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB+fn5+fn5+fn5+fn5+fn5+fn5+fn5+
        fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+
        fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+
        fn5+fn5+M35+fn5+fn4zfn5+fn5+M35+fn5+fjN+fn5+fn4zfn5+fn5+M35+fn5+fn5+fn5+AH5+fn5+
        fn4Afn5+fn5+AH5+fn5+fgB+fn5+fn4Afn5+fn5+AH5+fn5+fn5+fjMAAgAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADN+fn5+fn5+AH5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+
        fn5+fn5+fn5+fn5+fn5+fn5+AH5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+
        fn5+fn5+AH5+fn4AAH5+AH5+AAB+fn4AAH5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+AH5+fgB+
        fgB+fn4Afn4AfgB+fgB+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+AH5+fgB+fgB+fn4Afn4AfgB+
        fgB+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+AH5+fgB+fgB+AH4Afn4AfgB+fgB+fn5+fn5+fn5+
        fn5+fn5+fn5+fn5+fn5+fn5+AH5+fgB+fgB+fn4Afn4AfgB+fgB+fnh+fn5+fn5+fn5+fn5+fn5+fn5+
        fn5+fjMAAH5+fn4AAH5+fn5+AAB+fn4AAH5+bggfbH5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+AH5+fn5+
        fn5+fn5+fn5+fn5+fn5+QFhRNX5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+AH5+fn5+fn5+fn5+fn5+fn5+
        fn56BX5+BXp+fn5+fn5+fn5+fn5+fn5+fn5+fn5+AH5+fn5+fn5+fn5+fn5+fn5+fn5SQX5+QFh+fn5+
        fn5+fn5+cH5+fn5+fn5+fn5+AH5+fn5+fn5+fn5+fn5+fn5+fn4qaH5+aRx+fn5+fn5+fn5uEX5+fn5+
        fn5+fn5+AH5+fn5+fn5+fn5+fn5+fn5+fn4Ffn5+fhF0fn5+fn5+fn4tXX5+fn5+fn5+fn5+AH5+fn5+
        fn5+fn5+fn5+fn5+fm4ffn5+fkBYfn5jNkRvfnQHfn5+fn5+fn5+fjMAAH5+fn5+fn5+fn5+fn5+fn5+
        flhNfn5+fmgqfmUdYVoZVEBNfn5+fn5+fn5+fn5+AH5+fn5+fn5+fn5+fn5+fn5+fipofn5+fn4Ffhpq
        fn59MQp6fn5+fn5+fn5+fn5+AH5+fn5+fn5+fn5+fn5+fn5+fg9+fn5+fn4rQkV+fn5+WBdVfn5+fn5+
        fn5+fn5+AH5+fn5+fn5+fn5+fn5+fn5+bhF+fn5+fn5dFXN+fn5+CXQ0VX5+fn5+fn5+fn5+AH5+fn5+
        fn5+fn5+fn5+fn5+XUB+fn5+fn5eC35+fn5YNX5+ZH5+fn5+fn5+fn5+AH5+fn5+fn5+fn5+fn5+fn5+
        QF1+fn5+fn4nJmJ+fnoNbX5+fn5+fn5+fn5+fn5+AH5+fn5+fn5+fn5+fn5+fn5+EW5+fn5+fmA5XS5+
        fjVNfn5+fn5+fn5+fn5+fjMAAH5+fn5+fn5+fn5+fn5+fn5+BX5+fn5+fihrfh9dSxh+fn5+fn5+fn5+
        fn5+fn5+AH5+fn5+fn5+fn5+fn5+fn5oH35+fn5+Tj1+fnQONXV+fn5+fn5+fn5+fn5+fn5+AH5+fn5+
        fn5+fn5+fmswEhIeJWt+fn5XKHt+fn58fn5+fn5+fn5+fn5+fn5+fn5+AH5+fn5+fn5+fn5+ahJjfn4k
        PywSIhIydn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+AH5+fn5+fn5+fn5+MWB+fn4Jen5+eX5+fn5+fn5+
        fn5+fn5+fn5+fn5+fn5+fn5+AH5+fn56PgYjfn5fN35+fnQRfn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+
        fn5+fn5+AH5+fnERPHpIIX4oa35+fl1Afn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fjMAAH5+egxZ
        fn5+Kkcyfn5+fjVdfn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+BFBnH1h+fn5+bhBrfn5+fhF0
        fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+AVwWE1Bme357QyBYfn5+bhR+fn5+fn5+fn5+fn5+
        fn5+fn5+fn5+fn5+fn5+fn5+AFMfd1s4EikST3QFfn5+TU1+fn5+fn5+fn5MOzs7Ozs7Ozs7OztMfn5+
        fn5+fn5+Awlyfn5+fn1+fn5ARn5+CXR+fn5+fn5+fn47fn5+fn5+fn5+fn47fn5+fn5+fn5+AHh+fn5+
        fn5+fn56EWJWKn5+fn5+fn5+fn47fjoFNX5+fkoSRX47fn5+fn5+fn5+AH5+fn5+fn5+fn5+bg4baX5+
        fn5+fn5+fn47fn5+fn5+fn5+fn47fn5+fn5+fjMAAH5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5JOzs7
        Ozs7Ozs7OztJfn5+fn5+fn5+AH5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+
        fn5+fn5+AH5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+AH5+fn5+
        fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+L35+fn5+fn5+fn5+fn5+fn5+
        fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+
        fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+
        fn4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>